# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
# To compile with profiling do the following:
#
# make CFLAGS=-g CXXFLAGS=-g PROFILING=-p all
#
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
APACHE = @APACHE@
APACHE_MODULES = @APACHE_MODULES@
AR = @AR@
AS = @AS@
AWK = @AWK@
CC = @CC@
CGIBIN_DIR = @CGIBIN_DIR@
COMMON_DIR = @COMMON_DIR@
CONFIG_DIR = @CONFIG_DIR@
CXX = @CXX@
CXXFLAGS = @CXXFLAGS@
DATABASE_DIR = @DATABASE_DIR@
DEFAULT_CONFIG_FILE = @DEFAULT_CONFIG_FILE@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
FIND = @FIND@
GUNZIP = @GUNZIP@
HAVE_SSL = @HAVE_SSL@
HTDIG_MAJOR_VERSION = @HTDIG_MAJOR_VERSION@
HTDIG_MICRO_VERSION = @HTDIG_MICRO_VERSION@
HTDIG_MINOR_VERSION = @HTDIG_MINOR_VERSION@
IMAGE_DIR = @IMAGE_DIR@
IMAGE_URL_PREFIX = @IMAGE_URL_PREFIX@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBTOOL = @LIBTOOL@ --preserve-dup-deps
LN_S = @LN_S@
MAINT = @MAINT@
MV = @MV@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
PERL = @PERL@
RANLIB = @RANLIB@
RRDTOOL = @RRDTOOL@
SEARCH_DIR = @SEARCH_DIR@
SEARCH_FORM = @SEARCH_FORM@
SED = @SED@
SENDMAIL = @SENDMAIL@
STRIP = @STRIP@
TAR = @TAR@
TIME = @TIME@
TIMEV = @TIMEV@
USER = @USER@
VERSION = @VERSION@
YACC = @YACC@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@

AUTOMAKE_OPTIONS = foreign no-dependencies

INCLUDES = -DDEFAULT_CONFIG_FILE=\"$(DEFAULT_CONFIG_FILE)\" \
		-I$(top_builddir)/include -I$(top_srcdir)/htlib \
		-I$(top_srcdir)/htnet -I$(top_srcdir)/htcommon \
		-I$(top_srcdir)/htword \
		-I$(top_srcdir)/db -I$(top_builddir)/db \
		$(LOCAL_DEFINES) $(PROFILING)


HTLIBS = $(top_builddir)/htnet/libhtnet.la \
		$(top_builddir)/htcommon/libcommon.la \
		$(top_builddir)/htword/libhtword.la \
		$(top_builddir)/db/libhtdb.la \
		$(top_builddir)/htlib/libht.la \
		$(top_builddir)/htcommon/libcommon.la \
		$(top_builddir)/htword/libhtword.la \
		$(top_builddir)/db/libhtdb.la \
		$(top_builddir)/htlib/libht.la



#
# Part of the ht://Dig package   <http://www.htdig.org/>
# Copyright (c) 1999, 2000 The ht://Dig Group
# For copyright details, see the file COPYING in your distribution
# or the GNU General Public License version 2 or later
# <http://www.gnu.org/copyleft/gpl.html>
#

#
# All test programs use the index description from the
# mifluz.conf file (MIFLUZ_CONFIG set in test_functions.in). 
# Some have hard wired additions but these
# additions are never redundant with mifluz.conf content. Some
# programs have options that allow command line overriding of
# index parameters (page size, compression and such). 
#
# To run individual tests use (for instance):
# make TESTS=t_wordkey check
#
# To turn on verbosity use (for instance):
# VERBOSE=-vv make TESTS=t_wordkey check
#
# Run individual test without using make 
# MAKE=make srcdir=. VERBOSE=-vv t_wordkey
#
# To purify objects use:
# ( cd ../test ; rm -f word ; make CXXLD='purify g++' word )
#
# To generate benchmarks in benchmark/... make sure
# you have rrdtool installed and use 
# make MONITOR=' -m' dobench
#
TESTS = t_wordkey t_wordlist t_wordskip t_wordbitstream \
	t_search t_htdb t_rdonly t_trunc t_url \
	t_htdig t_htsearch t_htmerge t_htnet t_htdig_local


TESTS_ENVIRONMENT = $(top_srcdir)/test/test_prepare
AM_MAKEFLAGS = MAKE="$(MAKE)"

EXTRA_DIST = test_functions.in test_prepare $(TESTS) \
	skiptest_db.txt search.txt mifluz.conf mifluz-search.conf \
	benchmark-report benchmark t_htdb.dump \
	htdocs conf url.parents url.children url.output


LOCAL_DEFINES = -I$(top_builddir)/db -I$(top_srcdir)/db $(PROFILING)

check_PROGRAMS = word dbbench txt2mifluz search testnet document url

dbbench_SOURCES = dbbench.cc
dbbench_DEPENDENCIES = $(HTLIBS)
dbbench_LDFLAGS = $(PROFILING)
dbbench_LDADD = $(HTLIBS)

word_SOURCES = word.cc
word_DEPENDENCIES = $(HTLIBS)
word_LDFLAGS = $(PROFILING)
word_LDADD = $(HTLIBS)

txt2mifluz_SOURCES = txt2mifluz.cc
txt2mifluz_DEPENDENCIES = $(HTLIBS)
txt2mifluz_LDFLAGS = $(PROFILING)
txt2mifluz_LDADD = $(HTLIBS)

search_SOURCES = search.cc
search_DEPENDENCIES = $(HTLIBS)
search_LDFLAGS = $(PROFILING)
search_LDADD = $(HTLIBS)

testnet_SOURCES = testnet.cc
testnet_DEPENDENCIES = $(HTLIBS)
testnet_LDFLAGS = $(PROFILING)
testnet_LDADD = $(HTLIBS)

document_SOURCES = document.cc
document_DEPENDENCIES = $(HTLIBS)
document_LDFLAGS = $(PROFILING)
document_LDADD = $(HTLIBS)

url_SOURCES = url.cc
url_DEPENDENCIES = $(HTLIBS)
url_LDFLAGS = $(PROFILING)
url_LDADD = $(HTLIBS)

BASE = test
CACHESIZE = -C `expr 64 \* 1024 \* 1024`
PAGESIZE = -S 8192
CMPR = -z
WORDS = -w words.all
LOOP = -l 3
NWORDS = 
#MONITOR = -m
MONITOR = 
subdir = test
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/include/htconfig.h
CONFIG_CLEAN_FILES = test_functions
check_PROGRAMS = word$(EXEEXT) dbbench$(EXEEXT) txt2mifluz$(EXEEXT) \
	search$(EXEEXT) testnet$(EXEEXT) document$(EXEEXT) url$(EXEEXT)
am_dbbench_OBJECTS = dbbench.$(OBJEXT)
dbbench_OBJECTS = $(am_dbbench_OBJECTS)
am_document_OBJECTS = document.$(OBJEXT)
document_OBJECTS = $(am_document_OBJECTS)
am_search_OBJECTS = search.$(OBJEXT)
search_OBJECTS = $(am_search_OBJECTS)
am_testnet_OBJECTS = testnet.$(OBJEXT)
testnet_OBJECTS = $(am_testnet_OBJECTS)
am_txt2mifluz_OBJECTS = txt2mifluz.$(OBJEXT)
txt2mifluz_OBJECTS = $(am_txt2mifluz_OBJECTS)
am_url_OBJECTS = url.$(OBJEXT)
url_OBJECTS = $(am_url_OBJECTS)
am_word_OBJECTS = word.$(OBJEXT)
word_OBJECTS = $(am_word_OBJECTS)

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/include
CPPFLAGS = @CPPFLAGS@
LIBS = @LIBS@
depcomp =
am__depfiles_maybe =
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(dbbench_SOURCES) $(document_SOURCES) $(search_SOURCES) \
	$(testnet_SOURCES) $(txt2mifluz_SOURCES) $(url_SOURCES) \
	$(word_SOURCES)
DIST_COMMON = Makefile.am Makefile.in test_functions.in
SOURCES = $(dbbench_SOURCES) $(document_SOURCES) $(search_SOURCES) $(testnet_SOURCES) $(txt2mifluz_SOURCES) $(url_SOURCES) $(word_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/Makefile.config $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  test/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
test_functions: $(top_builddir)/config.status test_functions.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
dbbench$(EXEEXT): $(dbbench_OBJECTS) $(dbbench_DEPENDENCIES) 
	@rm -f dbbench$(EXEEXT)
	$(CXXLINK) $(dbbench_LDFLAGS) $(dbbench_OBJECTS) $(dbbench_LDADD) $(LIBS)
document$(EXEEXT): $(document_OBJECTS) $(document_DEPENDENCIES) 
	@rm -f document$(EXEEXT)
	$(CXXLINK) $(document_LDFLAGS) $(document_OBJECTS) $(document_LDADD) $(LIBS)
search$(EXEEXT): $(search_OBJECTS) $(search_DEPENDENCIES) 
	@rm -f search$(EXEEXT)
	$(CXXLINK) $(search_LDFLAGS) $(search_OBJECTS) $(search_LDADD) $(LIBS)
testnet$(EXEEXT): $(testnet_OBJECTS) $(testnet_DEPENDENCIES) 
	@rm -f testnet$(EXEEXT)
	$(CXXLINK) $(testnet_LDFLAGS) $(testnet_OBJECTS) $(testnet_LDADD) $(LIBS)
txt2mifluz$(EXEEXT): $(txt2mifluz_OBJECTS) $(txt2mifluz_DEPENDENCIES) 
	@rm -f txt2mifluz$(EXEEXT)
	$(CXXLINK) $(txt2mifluz_LDFLAGS) $(txt2mifluz_OBJECTS) $(txt2mifluz_LDADD) $(LIBS)
url$(EXEEXT): $(url_OBJECTS) $(url_DEPENDENCIES) 
	@rm -f url$(EXEEXT)
	$(CXXLINK) $(url_LDFLAGS) $(url_OBJECTS) $(url_LDADD) $(LIBS)
word$(EXEEXT): $(word_OBJECTS) $(word_DEPENDENCIES) 
	@rm -f word$(EXEEXT)
	$(CXXLINK) $(word_LDFLAGS) $(word_OBJECTS) $(word_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

.cc.o:
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cc.obj:
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cc.lo:
	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    chmod 755 $${dir}$$tst; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xpass=`expr $$xpass + 1`; \
	        failed=`expr $$failed + 1`; \
	        echo "XPASS: $$tst"; \
	      ;; \
	      *) \
	        echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xfail=`expr $$xfail + 1`; \
	        echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
	        failed=`expr $$failed + 1`; \
	        echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes=`echo "$$banner" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-local distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am

.PHONY: GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	distclean distclean-compile distclean-generic distclean-libtool \
	distclean-local distclean-tags distdir dvi dvi-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	tags uninstall uninstall-am uninstall-info-am


clean-local:
	rm -fr gmon.out test test_weakcmpr __db*
	rm -f  tmpfile t_htdb.d? monitor.out 
	$(MAKE) -C conf clean

distclean-local:
	rm -fr words.all words.uniq

#
# The benchmark directory contains the result of some benchmarks in HTML
# form generated by benchmark-report, if MONITOR='-m' is specified.
#
dobench: dbbench
	$(MAKE) BASE="$(BASE)" CACHESIZE="$(CACHESIZE)" PAGESIZE="$(PAGESIZE)" LOOP="$(LOOP)" NWORDS="$(NWORDS)" CMPR='-z' REPORT='Nz' MONITOR="$(MONITOR)" bench
	$(MAKE) BASE="$(BASE)" CACHESIZE="$(CACHESIZE)" PAGESIZE="$(PAGESIZE)" LOOP="$(LOOP)" NWORDS="$(NWORDS)" CMPR='' REPORT='N' MONITOR="$(MONITOR)" bench
	$(MAKE) BASE="$(BASE)" CACHESIZE="$(CACHESIZE)" PAGESIZE="$(PAGESIZE)" LOOP="$(LOOP)" NWORDS="$(NWORDS)" CMPR='-W -z' REPORT='Wz' MONITOR="$(MONITOR)" bench
	$(MAKE) BASE="$(BASE)" CACHESIZE="$(CACHESIZE)" PAGESIZE="$(PAGESIZE)" LOOP="$(LOOP)" NWORDS="$(NWORDS)" CMPR='-W' REPORT='W' MONITOR="$(MONITOR)" bench

bench:
	rm -f $(BASE) $(BASE)_weakcmpr __db* monitor.out bench.out
	( \
	  MIFLUZ_CONFIG=$(top_srcdir)/test/mifluz.conf $(TIMEV) $(top_builddir)/test/dbbench $(CACHESIZE) $(PAGESIZE) $(CMPR) $(WORDS) $(LOOP) -B $(BASE) $(NWORDS) $(MONITOR) ; \
	  ls -l $(BASE) ; \
	  if [ -f $(BASE)_weakcmpr ] ; then MIFLUZ_CONFIG=$(top_srcdir)/test/mifluz.conf $(top_builddir)/htdb/htdump -p $(BASE)_weakcmpr ; fi ; \
	  MIFLUZ_CONFIG=$(top_srcdir)/test/mifluz.conf $(top_builddir)/htdb/htstat $(CMPR) -d $(BASE) ; \
	) 2>&1 | tee bench.out
	if [ "$(RRDTOOL)" -a "X$(MONITOR)" != "X" ] ; then \
		if [ "$(REPORT)" ] ; \
		then \
			output="--output $(REPORT)" ; \
		fi ; \
		$(PERL) benchmark-report $$output --comment="`cat bench.out`" ; \
		rm monitor.out ; \
	fi

#
# Generate list of words from info and man files.
#
words:
	if [ -d /usr/info ] ; then root=/usr ; else root=/usr/share ; fi ; \
	find $$root/info -name '*.gz' -print | xargs zcat | perl -n -e 'print join("\n", map { lc } grep(length() > 2 && length() < 32, m/[a-z]+/ig)) . "\n"' | grep -v '^$$' > words.all ; \
	find $$root/man -type f -name '*.gz' -print | xargs zcat | perl -n -e 'print join("\n", map { lc } grep(length() > 2 && length() < 32, m/[a-z]+/ig)) . "\n"' | grep -v '^$$' >> words.all 
	sort -u < words.all > words.uniq
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
