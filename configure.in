# Configuration for ht://Dig 3.x
# Copyright (c) 1995-2000 The ht://Dig Group
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

AC_INIT(htcommon/DocumentDB.cc)
VERSION=`cat ${srcdir}/.version`
HTDIG_MAJOR_VERSION=[`expr $VERSION : '\([0-9][0-9]*\)'`]
AC_SUBST(HTDIG_MAJOR_VERSION)
HTDIG_MINOR_VERSION=[`expr $VERSION : '[0-9][0-9]*\.\([0-9][0-9]*\)'`]
AC_SUBST(HTDIG_MINOR_VERSION)
HTDIG_MICRO_VERSION=[`expr $VERSION : '[0-9][0-9]*\.[0-9][0-9]*\.\([0-9][0-9]*\)'`]
AC_SUBST(HTDIG_MICRO_VERSION)
AM_INIT_AUTOMAKE([htdig], $VERSION)
AC_PREREQ(2.13)

AM_CONFIG_HEADER(include/htconfig.h)
AC_PREFIX_DEFAULT(/opt/www)

echo configuring ht://Dig version $VERSION

dnl Checks for programs.
AC_PROG_MAKE_SET
AM_PROG_LIBTOOL

AC_PROG_CC
AC_PROG_CXX
AC_AIX
AC_COMPILE_WARNINGS
NO_RTTI
NO_EXCEPTIONS
AC_PROG_RANLIB
AC_PATH_PROG(AR, ar, ar)
AC_PATH_PROG(SHELL, sh, /bin/sh)
AC_PATH_PROG(SED, sed, /bin/sed)
AC_PATH_PROG(PERL, perl, /usr/bin/perl)
AC_PATH_PROG(FIND, find, /bin/find)
AC_PATH_PROG(GUNZIP, gunzip, /bin/gunzip)
AC_CHECK_PROGS(RRDTOOL, rrdtool)
AC_CHECK_PROGS(TAR, tar gtar gnutar, tar)
AC_PATH_PROG(MV, mv, /bin/mv)
AC_PATH_PROG(SENDMAIL, sendmail, /usr/lib/sendmail, 
   $PATH:/usr/libexec:/usr/sbin:/usr/lib:/usr/etc:etc)
AM_PROG_TIME
AM_PROG_LEX
AM_PROG_YACC

dnl Initialize maintainer mode
AM_MAINTAINER_MODE

AC_ARG_WITH(config-dir, [  --with-config-dir=DIR  where your config directory is [default=$ac_default_prefix/conf]],
 CONFIG_DIR="$withval", CONFIG_DIR='${prefix}/conf')
AC_SUBST(CONFIG_DIR)

AC_ARG_WITH(common-dir, [  --with-common-dir=DIR  where your common directory is [default=$ac_default_prefix/share/htdig]],
 COMMON_DIR="$withval", COMMON_DIR='${datadir}/htdig')
AC_SUBST(COMMON_DIR)

AC_ARG_WITH(database-dir, [  --with-database-dir=DIR  where your database directory is [default=$ac_default_prefix/var/htdig]],
 DATABASE_DIR="$withval", DATABASE_DIR='${localstatedir}/htdig')
AC_SUBST(DATABASE_DIR)

AC_ARG_WITH(default-config-file, [  --with-default-config-file=FILE Where the various programs will look for a configuration file  [default=$ac_default_prefix/conf/htdig.conf]],
 DEFAULT_CONFIG_FILE="$withval", DEFAULT_CONFIG_FILE='${CONFIG_DIR}/htdig.conf')
AC_SUBST(DEFAULT_CONFIG_FILE)

AC_ARG_WITH(cgi-bin-dir, [  --with-cgi-bin-dir=DIR  where your cgi-bin directory is  [default=$ac_default_prefix/cgi-bin]],
 CGIBIN_DIR="$withval", CGIBIN_DIR='${prefix}/cgi-bin')
AC_SUBST(CGIBIN_DIR)

AC_ARG_WITH(image-dir, [  --with-image-dir=DIR    where the ht://Dig images are installed [default=$ac_default_prefix/htdocs/htdig]],
 IMAGE_DIR="$withval", IMAGE_DIR='${prefix}/htdocs/htdig')
AC_SUBST(IMAGE_DIR)

AC_ARG_WITH(search-dir, [  --with-search-dir=DIR   where the sample search form should be installed [default=$ac_default_prefix/htdocs/htdig]],
 SEARCH_DIR="$withval", SEARCH_DIR='${prefix}/htdocs/htdig')
AC_SUBST(SEARCH_DIR)

AC_ARG_WITH(image-url-prefix, [  --with-image-url-prefix=LOCATION   the URL path to the installed images [default=/hdig]],
 IMAGE_URL_PREFIX="$withval", IMAGE_URL_PREFIX='/htdig')
AC_SUBST(IMAGE_URL_PREFIX)

AC_ARG_WITH(search-form, [  --with-search-form=FILE   the name for the sample search form [default=search.html]],
 SEARCH_FORM="$withval", SEARCH_FORM='search.html')
AC_SUBST(SEARCH_FORM)

dnl If the user doesn't want tests
AC_ARG_ENABLE(tests,
	[  --disable-tests     Do NOT build a version with run-time tests.],
	[htdig_cv_tests="$enable_tests"], [htdig_cv_tests="yes"])
AM_CONDITIONAL(TESTS, test x$htdig_cv_tests = xyes)

dnl While we're at it, let's work out the program transformations
AC_ARG_PROGRAM
AC_PROG_INSTALL()
AC_CANONICAL_HOST

dnl Process all options before using them.  This is necessary because there
dnl are dependencies among them.
AM_OPTIONS_SET

dnl This is where we handle stuff that autoconf can't handle: compiler,
dnl preprocessor and load flags, libraries that the standard tests don't
dnl look for.  The default optimization is -O.
dnl
dnl There are additional libraries we need for some compiler/architecture
dnl combinations.
dnl
dnl Some architectures require DB to be compiled with special flags and/or
dnl libraries for threaded applications
dnl
dnl The makefile CC may be different than the CC used in config testing,
dnl because the makefile CC may be set to use $(LIBTOOL).
dnl
dnl XXX
dnl Don't override anything if it's already set from the environment.
optimize_def="-O"
case "$host_os" in
aix4.*)	   optimize_def="-O2"
	   CC=${CC-"xlc_r"}
	   CPPFLAGS="-D_THREAD_SAFE $CPPFLAGS";;
bsdi3*)	   CC=${CC-"shlicc2"}
	   optimize_def="-O2"
	   LIBS="-lipc $LIBS";;
bsdi*)	   optimize_def="-O2";;
freebsd*)  optimize_def="-O2"
	   CPPFLAGS="-D_THREAD_SAFE -pthread $CPPFLAGS";;
hpux*)	   CPPFLAGS="-D_REENTRANT $CPPFLAGS";;
irix*)	   optimize_def="-O2"
	   CPPFLAGS="-D_SGI_MP_SOURCE $CPPFLAGS";;
linux*)	   optimize_def="-O2"
	   CPPFLAGS="-D_REENTRANT $CPPFLAGS";;
mpeix*)	   CPPFLAGS="-D_POSIX_SOURCE -D_SOCKET_SOURCE $CPPFLAGS"
	   LIBS="-lsocket -lsvipc $LIBS";;
osf*)	   CPPFLAGS="-D_REENTRANT $CPPFLAGS";;
sco3.2v4*) CC=${CC-"cc -belf"}
	   LIBS="-lsocket -lnsl_s $LIBS";;
sco*)	   CC=${CC-"cc -belf"}
	   LIBS="-lsocket -lnsl $LIBS";;
solaris*)  CPPFLAGS="-D_REENTRANT $CPPFLAGS";;
esac

dnl If the user wants a debugging environment, add -g to the CFLAGS value.
dnl
dnl XXX
dnl Some compilers can't mix optimizing and debug flags.  The only way to
dnl handle this is to specify CFLAGS in the environment before configuring.
if test "$db_cv_debug" = yes; then
	AC_DEFINE(DEBUG)
	CFLAGS="$CFLAGS -g"
	CXXFLAGS="$CXXFLAGS -g"
fi

dnl Set some #defines based on configuration options.
if test "$db_cv_diagnostic" = yes; then
	AC_DEFINE(DIAGNOSTIC)
fi
if test "$db_cv_debug_rop" = yes; then
	AC_DEFINE(DEBUG_ROP)
fi
if test "$db_cv_debug_wop" = yes; then
	AC_DEFINE(DEBUG_WOP)
fi

dnl Checks for typedefs, structures, and system/compiler characteristics.
AC_C_BIGENDIAN
AC_C_CONST
AC_HEADER_STAT
AC_HEADER_TIME
AC_STRUCT_ST_BLKSIZE
AC_TYPE_MODE_T
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T

dnl Define any short-hand types we're missing.
AM_SHORTHAND_TYPES

dnl Checks for header files.
AC_HEADER_DIRENT
AC_CHECK_HEADERS(sys/select.h)
AC_CHECK_HEADERS(sys/time.h)

dnl Check for mutexes.  We do this here because it changes $LIBS.
AM_DEFINE_MUTEXES

dnl Pread/pwrite.
dnl
dnl HP-UX has pread/pwrite, but it doesn't work with bigfile support.
dnl
dnl Linux has pread/pwrite, but the man pages say it requires a special
dnl #ifdef before the #include file, and even then it won't compile.
case "$host_os" in
hpux*|linux*)
	AC_MSG_WARN([pread/pwrite interfaces ignored on $host_os.]);;
*)	AC_CHECK_FUNCS(pread pwrite)
esac

dnl Check for fcntl(2) to deny child process access to file descriptors.
AC_CACHE_CHECK([for fcntl/F_SETFD], db_cv_fcntl_f_setfd, [dnl
AC_TRY_RUN([
#include <sys/types.h>
#include <fcntl.h>
main(){exit(fcntl(1, F_SETFD, 1) == -1);}],
	[db_cv_fcntl_f_setfd=yes], [db_cv_fcntl_f_setfd=no], [:])])
if test "$db_cv_fcntl_f_setfd" = yes; then
	AC_DEFINE(HAVE_FCNTL_F_SETFD)
fi

dnl Checks for system functions for which we don't have replacements.

dnl We require qsort(3) and select(2).
AC_CHECK_FUNCS(qsort, , AC_MSG_ERROR([No qsort library function.]))
AC_CHECK_FUNCS(select, , AC_MSG_ERROR([No select library function.]))

dnl Some versions of sprintf return a pointer to the first argument instead
dnl of a character count.  We assume that the return value of snprintf and
dnl vsprintf etc. will be the same as sprintf, and check the easy one.
AC_CACHE_CHECK([for int type sprintf return value], db_cv_sprintf_count, [dnl
AC_TRY_RUN([main(){char buf[20]; exit(sprintf(buf, "XXX") != 3);}],
	[db_cv_sprintf_count=yes], [db_cv_sprintf_count=no], [:])])
if test "$db_cv_sprintf_count" = no; then
	AC_DEFINE(SPRINTF_RET_CHARPNT)
fi

dnl Figure out how to create shared regions.
dnl
dnl First, we look for mmap.
dnl
dnl	BSD/OS has mlock(2), but it doesn't work.
dnl
dnl	Nextstep (version 3.3) apparently supports mmap(2) (the mmap symbol
dnl	is defined in the C library) but does not support munmap(2).  Don't
dnl	try to use mmap if we can't find munmap.
dnl
dnl	Ultrix has mmap(2), but it doesn't work.
mmap_ok=no
case "$host_os" in
ultrix*)
	AC_MSG_WARN([mmap(2) interface ignored on Ultrix.]);;
bsdi*)
	AC_MSG_WARN([mlock(2) interface ignored on BSD/OS.])
	mmap_ok=yes
	AC_CHECK_FUNCS(mmap munmap, , mmap_ok=no);;
*)
	mmap_ok=yes
	AC_CHECK_FUNCS(mlock munlock)
	AC_CHECK_FUNCS(mmap munmap, , mmap_ok=no);;
esac

dnl Second, we look for shmget.
dnl
dnl	SunOS has the shmget(2) interfaces, but there appears to be a missing
dnl	#include <debug/debug.h> file, so we ignore them.
shmget_ok=no
case "$host_os" in
sunos*)
	AC_MSG_WARN([shmget(2) interface ignored on SunOS.]);;
*)
	shmget_ok=yes
	AC_CHECK_FUNCS(shmget, , shmget_ok=no);;
esac

dnl We require either mmap/munmap(2) or shmget(2).
if test "$mmap_ok" = no -a "$shmget_ok" = no; then
	AC_MSG_ERROR([Neither mmap/munmap(2) or shmget(2) library functions.])
fi

dnl Checks for libraries.
AC_CHECK_LIB(socket, socket)
AC_CHECK_LIB(nsl, t_accept)
CHECK_ZLIB
AC_SUBST(CXXFLAGS)dnl
AC_SUBST(LDFLAGS)dnl

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_TIME

dnl More header checks--here use C++
AC_LANG_CPLUSPLUS
AC_CHECK_HEADERS(fcntl.h limits.h malloc.h sys/file.h sys/ioctl.h sys/time.h unistd.h getopt.h strings.h zlib.h)
AC_CHECK_HEADER(fstream.h,nofstream=0,nofstream=1)
if test "x$nofstream" = "x1" ; then
AC_MSG_ERROR([To compile, you will need a C++ library. Try installing libstdc++.])
fi

dnl Checks for typedefs, structures, and compiler characteristics.
AC_LANG_C
AC_C_CONST
AC_STRUCT_TM
dnl AC_CHECK_SIZEOF(int *) => SIZEOF_INT_P
AC_CHECK_SIZEOF(unsigned long long int, 8)
AC_CHECK_SIZEOF(unsigned long int, 4)
AC_CHECK_SIZEOF(unsigned int, 4)
AC_CHECK_SIZEOF(unsigned short int, 2)
AC_CHECK_SIZEOF(unsigned char, 1)                                                                       
dnl Checks for library functions.
AC_CHECK_FUNCS(strdup strerror strstr getcwd memcmp memcpy memmove raise)
AC_REPLACE_FUNCS(snprintf vsnprintf)
AC_FUNC_ALLOCA
AC_FUNC_STRFTIME
AC_FUNC_STRPTIME
AC_CHECK_FUNCS(localtime_r timegm)

dnl Check for system functions we optionally use.
AC_CHECK_FUNCS(getuid pstat_getdynamic sysconf)
AC_CHECK_FUNCS(sched_yield yield)

dnl Regex is compiled by the C compiler so we need to do it before we switch
AC_MSG_CHECKING(if we should use the included regex?)
AC_TRY_RUN([	#include "${srcdir}/htlib/regex.c"
		int main() {
		   regex_t re;
		   return regcomp(&re, "ht.*Dig", REG_ICASE);
		}
		],
  [AC_MSG_RESULT(yes);LIBOBJS="$LIBOBJS regex.${ac_objext}"],
  [AC_MSG_RESULT(no);AC_DEFINE(HAVE_BROKEN_REGEX)],
  [AC_MSG_RESULT(unknown);AC_DEFINE(HAVE_BROKEN_REGEX)]
)

LTLIBOBJS=`echo "$LIBOBJS" | sed 's/\.o/.lo/g'`
AC_SUBST(LTLIBOBJS)

AC_MSG_CHECKING(if --enable-bigfile option specified)
AC_ARG_ENABLE(bigfile,
	[  --enable-bigfile       Enable Linux, AIX, HP/UX, Solaris big files.],
	[db_cv_bigfile="$enable_bigfile"], [db_cv_bigfile="yes"])
AC_MSG_RESULT($db_cv_bigfile)

dnl Vendors are doing 64-bit lseek in different ways.
dnl AIX, HP/UX and Solaris all use _FILE_OFFSET_BITS to specify a "big-file"
dnl environment.
dnl
dnl You can't build C++ with big-file support on HP-UX, the include files
dnl are wrong.  On Solaris 8, <fcntl.h> included with big-file support
dnl is not compatible with C++.
if test "$db_cv_bigfile" = "yes"; then
	case "$host_os" in
        solaris2.8|hpux*)
		if test "$db_cv_cxx" = "yes"; then
	AC_MSG_WARN([Large file and C++ API support are incompatible on HP-UX])
	AC_MSG_WARN([and Solaris 8; large file support has been turned off.])
		else
			AC_DEFINE(HAVE_FILE_OFFSET_BITS)
		fi;;
	aix*|solaris*)
		AC_DEFINE(HAVE_FILE_OFFSET_BITS);;
	linux*)	if test "$build_cpu" = "i686"
		then
			AC_DEFINE(HAVE_FILE_OFFSET_BITS)
			AC_DEFINE(HAVE_LARGEFILE_SOURCE)
		fi
		;;
	esac
fi

dnl These tests need to be run through the c++ compiler
AC_LANG_CPLUSPLUS
AC_MSG_CHECKING(whether we need gethostname() prototype?)
AC_TRY_COMPILE([#include <unistd.h>
#include <stdio.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <sys/ioctl.h>
#include <sys/uio.h>
#include <sys/file.h>
#include <fcntl.h>
#include <netdb.h>
#include <stdlib.h>
extern "C" int gethostname(char *, int);],
  [gethostname("sdsu.edu", (int) 8);],
  [AC_MSG_RESULT(yes);AC_DEFINE(NEED_PROTO_GETHOSTNAME)],
  [AC_MSG_RESULT(no)])

dnl We're still using the C++ compiler for this test
AC_MSG_CHECKING(how to call getpeername?)
for sock_t in 'struct sockaddr' 'void'; do
  for getpeername_length_t in 'size_t' 'int' 'unsigned int' 'long unsigned int' 'socklen_t'
  do
    AC_TRY_COMPILE([#include <sys/types.h>
#include <sys/socket.h>
 extern "C" int getpeername(int, $sock_t *, $getpeername_length_t *);
 $sock_t s;  $getpeername_length_t l; ],
    [ getpeername(0, &s, &l); ],
    [ac_found=yes ; break 2],[ac_found=no])
  done
done

if test "$ac_found" = no
then
  AC_MSG_WARN([can't determine argument type using int])
  AC_DEFINE_UNQUOTED(GETPEERNAME_LENGTH_T, int)
else
  AC_MSG_RESULT($getpeername_length_t)
  AC_DEFINE_UNQUOTED(GETPEERNAME_LENGTH_T, $getpeername_length_t)
fi

AC_MSG_CHECKING(how to call select?)
for fd_set_t in 'fd_set' 'int'
  do
    AC_TRY_COMPILE([#include <sys/time.h>
#include <sys/types.h>
#include <unistd.h>
 extern "C" int select(int, $fd_set_t *, $fd_set_t *, $fd_set_t *, struct timeval *);
 $fd_set_t fd; ],
    [ select(0, &fd, 0, 0, 0); ],
    [ac_found=yes ; break 2],[ac_found=no])
done

if test "$ac_found" = no
then
  AC_MSG_WARN([can't determine argument type using int])
  AC_DEFINE_UNQUOTED(FD_SET_T, int)
else
  AC_MSG_RESULT($fd_set_t)
  AC_DEFINE_UNQUOTED(FD_SET_T, $fd_set_t)
fi

dnl Check if the c++ compiler knows bool
dnl AC_LANG_C++ is still set
AC_MSG_CHECKING(for bool data type?)
AC_TRY_COMPILE(,[bool i;],
  [AC_MSG_RESULT(yes);AC_DEFINE(HAVE_BOOL)],
  [AC_MSG_RESULT(no)])

dnl Check if the c++ compiler knows true and false
AC_MSG_CHECKING(for true and false?)
AC_TRY_COMPILE(,[int i, j; i= true; j= false;],
  [AC_MSG_RESULT(yes)
     AC_DEFINE(HAVE_TRUE)
     AC_DEFINE(HAVE_FALSE)],
  [AC_MSG_RESULT(no)])

dnl Any remaining tests probably want the C compiler
AC_LANG_C

if test x$htdig_cv_tests = xyes
then
	CHECK_USER
	AC_PROG_APACHE(1.3.1)
fi

AC_OUTPUT(Makefile db/Makefile db/db.h htcommon/Makefile htword/Makefile htnet/Makefile htlib/Makefile htdb/Makefile htdig/Makefile httools/Makefile htfuzzy/Makefile htsearch/Makefile installdir/Makefile include/Makefile htdoc/Makefile test/Makefile test/test_functions)

echo ""
echo ""
echo "Now you must run 'make' followed by 'make install'"
echo ""
